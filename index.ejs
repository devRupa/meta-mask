<html>

<head>
  <meta charset="UTF-8" />
  <title>E2E Test Dapp</title>
  <link rel="icon" type="image/svg" href="metamask-fox.svg" />
  <link rel="stylesheet" href="https://fonts.googleapis.com/css?family=Roboto:300,400,500,700&display=swap" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/twitter-bootstrap/4.4.1/css/bootstrap.min.css" rel="stylesheet" />
  <link href="https://cdnjs.cloudflare.com/ajax/libs/mdbootstrap/4.14.1/css/mdb.min.css" rel="stylesheet" />
  <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.6.1/jquery.min.js"></script>
  <link rel="stylesheet" href="index.css" type="text/css" />


</head>

<body>
  <main class="container-fluid">
    <header>
      <div id="logo-container">

        <img id="mm-logo" src="/metamask-fox.svg" />
      </div>
    </header>
    <section>
      <h3 class="card-title">
        Status
      </h3>

      <div class="row">
        <div class="col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12">
          <p class="info-text alert alert-primary">
            Network: <span class="showNetworkId"></span>
          </p>
        </div>

        <div class="col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12">
          <p class="info-text alert alert-secondary">
            Balance: <span class="showBal"></span>
          </p>
        </div>

        <div class="col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12">
          <p class="info-text alert alert-success">
            Accounts: <span class="showAccount" id="showAccount"></span>
          </p>
        </div>
      </div>
    </section>

    <section> 
      <div class="row d-flex justify-content-center">
        <div class="col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12">
          <div class="card">
            <div class="card-body">
              <h4 class="card-title">
                Basic Actions
              </h4>

              <button class="btn btn-primary btn-lg btn-block mb-3 enableEthereumButton">
                Connect
              </button>

              <button class="btn btn-primary btn-lg btn-block mb-3 getAccountButton" id="getAccounts">
                eth_accounts
              </button>

              <button class="btn btn-primary btn-lg btn-block mb-3 getAccountBalBtn">
                Get Account Balance
              </button>

            </div>
          </div>
        </div>
        <div class="col-xl-4 col-lg-6 col-md-12 col-sm-12 col-12">
          <div class="card">
            <div class="card-body">
              <h4 class="card-title">
                Send form
              </h4>
              <div class="col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12">
                <p class="info-text success success-secondary">
                  <span class="showTxHash"></span>
                </p>
              </div>
              <div class="form-group">
                <label>To*</label>
                <input class="form-control" type="text" id="toAddress" name="toAddress" />
              </div>
              <div class="form-group">
                <label>Amount*</label>
                <input class="form-control" type="text" id="amount" name="amount" />
              </div>

              <button class="btn btn-primary btn-lg btn-block mb-3 sendEthButton" id="submitForm sendEthButton">
                Submit
              </button>
            </div>
          </div>
        </div>
      </div>
    </section>


  </main>
  <script src="https://cdnjs.cloudflare.com/ajax/libs/web3/1.2.7/web3.min.js" ></script>

  <script>


    $(document).ready(function () {

     

      $(".enableEthereumButton").click(function () {
        getAccount();
      });
      $(".getAccountButton").click(function () {
        getAccount();
      });
      $(".getAccountBalBtn").click(function () {
        getAccount();
      });

      const getWeb3=async()=>{
        return new Promise(async(resolve, reject) => {
          const web3=new Web3(window.ethereum);
          try{
        await window.ethereum.request({ method: 'eth_requestAccounts' });
              resolve(web3);
          }catch(error)
          {
            reject(error);
          }
        })
      }
    


      
     
      async function getAccount() {


        if(Boolean(window.ethereum && window.ethereum.isMetaMask)==false){
          alert('Please install metamask!');
          return false;
        }

        const web3=await getWeb3();
        const accounts = await web3.eth.requestAccounts();
        var account = accounts[0];
        var networkId = await web3.eth.net.getId();

        const balRes = await web3.eth.getBalance(account);

        var bal = Math.round(Web3.utils.fromWei(balRes)*1000)/1000


        $('.showNetworkId').html(networkId);
        $('.showAccount').html(account);
        $('.enableEthereumButton').html('Connected');
        $('.showBal').html(bal + " ETH");
      }


      // on change account
      window.ethereum.on('accountsChanged', async () => {
        const web3=await getWeb3();
        const accounts = await web3.eth.requestAccounts();
        var account = accounts[0];
        var networkId = await web3.eth.net.getId();

        const balRes = await await web3.eth.getBalance(account);

        var bal = Math.round(Web3.utils.fromWei(balRes)*1000)/1000


        $('.showNetworkId').html(networkId);
        $('.showAccount').html(account);
        $('.enableEthereumButton').html('Connected');
        $('.showBal').html(bal + " ETH");
});

      // on change network
ethereum.on('chainChanged', (chainId) => {
  window.location.reload();
});



      $(".sendEthButton").click(function () {

        var toAddress = $('#toAddress').val();
        var amount = $("#amount").val();

        var txHash = sendEth(toAddress, amount);


      });


      //Sending Ethereum to an address
      async function sendEth(toAddress, amount) {
        toAddress = '0x012Cce2b962e20445977AEfc9e3531b19d0be602';

        // amount = parseInt(amount, 10);
        amount = amount * (10 ** 18);
        amount = amount.toString(16);
        amount = '0x' + amount;

        const accounts = await ethereum.request({ method: 'eth_requestAccounts' });
        var account = accounts[0];

        ethereum
          .request({
            method: 'eth_sendTransaction',
            params: [
              {
                from: account,
                to: toAddress,
                value: amount,
                gasPrice: '0x09184e72a000',
                gas: '0x5208'
              },
            ],
          })
          .then((txHash) => {
            alert(txHash);
            $('.showTxHash').html('TxHash: ' + txHash);
            return txHash;
          })
          .catch((error) => console.error);
      }

    });
  </script>
</body>

</html>